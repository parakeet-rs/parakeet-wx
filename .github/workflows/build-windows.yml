name: Build (Windows)

on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    name: "Build Windows Binary"
    strategy:
      matrix:
        win_ver: ["win32", "win64"]
        include:
          - vs_ver: "2022"

    runs-on: windows-2022
    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg-bc

    steps:
      - name: "⏳ Clone repo..."
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "🖼️ Setup scene..."
        shell: bash
        run: |
          mkdir -p .vcpkg-bc
          bash ./vcpkg/bootstrap-vcpkg.sh  --disableMetrics

      - name: "🏭 vcpkg: setup binary cache"
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-vcpkg-v3-${{ hashFiles('**/vcpkg.json') }}
          path: |
            .vcpkg-bc
          restore-keys: |
            ${{ runner.os }}-vcpkg-v3-
            ${{ runner.os }}-vcpkg-
            ${{ runner.os }}-

      - name: "🔧 CMake: Configure"
        run: cmake --preset "${{ win_ver }}-${{ vs_ver }}-rel"

      - name: "🛠️ CMake: Build"
        run: cmake --build --preset "${{ win_ver }}-${{ vs_ver }}-rel"

      - name: "💣 Test um-crypto ..."
        run: ctest --output-on-failure
        working-directory: "build/${{ win_ver }}-${{ vs_ver }}-rel/um-crypto"

      - name: "📦 Packaging"
        shell: bash
        run: |
          bash build-prepare.sh
          UMD_DIR="build/${{ win_ver }}-${{ vs_ver }}-rel/um-desktop"
          DIST_DIR="dist"
          cp "${UMD_DIR}/Release/um-desktop.exe" \
             "${DIST_DIR}/Parakeet-${{ win_ver }}.exe"

      - name: "🚀 Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: "${{ win_ver }}"
          path: dist/
