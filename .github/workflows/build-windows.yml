name: Build (Windows)

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  schedule:
    # Build once every fortnight
    - cron: "10 4 1,15 * *"

permissions:
  contents: read

jobs:
  build:
    name: "Build Windows Binary"
    strategy:
      matrix:
        win_ver: ["win32", "win64"]
        include:
          - vs_ver: "2022"

    runs-on: windows-2022
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: "3"
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg-bc

    steps:
      - name: "⏳ Clone repo..."
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "🖼️ Setup scene..."
        shell: bash
        run: |
          mkdir -p .vcpkg-bc
          bash ./vcpkg/bootstrap-vcpkg.sh  --disableMetrics

      - name: "🏭 vcpkg: setup binary cache"
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-vcpkg-${{ matrix.win_ver }}-${{ hashFiles('**/vcpkg.json') }}
          path: |
            .vcpkg-bc
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ matrix.win_ver }}-
            ${{ runner.os }}-vcpkg-
            ${{ runner.os }}-

      - name: "🍳 Prepare"
        shell: bash
        run: bash build-prepare.sh

      - name: "🔧 CMake: Configure"
        run: cmake --preset "${{ matrix.win_ver }}-${{ matrix.vs_ver }}-rel"

      - name: "🛠️ CMake: Build"
        run: cmake --build --preset "${{ matrix.win_ver }}-${{ matrix.vs_ver }}-rel"

      - name: "💣 Test um-crypto ..."
        run: ctest --output-on-failure
        working-directory: "build/${{ matrix.win_ver }}-${{ matrix.vs_ver }}-rel/um-crypto"

      - name: "📦 Packaging"
        shell: bash
        run: |
          BUILD_DIR="build/${{ matrix.win_ver }}-${{ matrix.vs_ver }}-rel"
          DIST_DIR="dist"
          cp "${BUILD_DIR}/um-desktop/Release/um-desktop.exe" \
             "${DIST_DIR}/Parakeet-${{ matrix.win_ver }}.exe"

      - name: "🚀 Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.win_ver }}"
          path: dist/

      - name: 🏭 prepare msys2 (for release)
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            zip

      - name: 🗜️ prepare (for release)
        shell: msys2 {0}
        run: |
          set -ex

          cd dist/
          zip -9 "../Parakeet.${{ matrix.win_ver }}.zip" "*"

      - name: 📝 Draft Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "<to be filled>"
          draft: true
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          files: |
            *.zip
