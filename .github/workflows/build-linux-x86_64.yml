name: Build (Linux x86_64)

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  schedule:
    # Build once every fortnight
    - cron: "10 4 1,15 * *"

permissions:
  contents: read

jobs:
  build:
    name: "Build Linux Binary"

    runs-on: ubuntu-22.04
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: "3"
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg-bc
      CC: gcc-11
      CXX: g++-11

    steps:
      - name: "⏳ Clone repo..."
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "🖼️ Setup scene..."
        run: |
          mkdir -p .vcpkg-bc
          bash build-setup-ubuntu.sh
          bash prepare.linux.sh

      - name: "🏭 vcpkg: setup binary cache"
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
          path: |
            .vcpkg-bc
          restore-keys: |
            ${{ runner.os }}-vcpkg-
            ${{ runner.os }}-

      - name: "🍳 Prepare"
        shell: bash
        run: bash build-prepare.sh

      - name: "🔧 CMake: Configure"
        run: cmake --preset default-linux-rel

      - name: "🛠️ CMake: Build"
        run: cmake --build --preset default-linux-rel

      - name: "💣 Test um-crypto ..."
        run: ctest --output-on-failure
        working-directory: build/linux-rel/um-crypto

      - name: "📦 Packaging"
        shell: bash
        run: |
          cp build/linux-rel/um-desktop/um-desktop \
             dist/Parakeet-linux-x86_64

          cd dist
          zip -r9 "../Parakeet.Linux.x64.zip" .

      - name: "🚀 Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86_64
          path: dist/

      - name: 📝 Draft Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "<to be filled>"
          draft: true
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          files: |
            *.zip

  package_appimage:
    name: "Package AppImage"
    needs: [build]
    runs-on: ubuntu-22.04
    env:
      DEPLOY_GTK_VERSION: 3
      APPIMAGE_EXTRACT_AND_RUN: 1

    steps:
      - name: "⏳ Clone repo..."
        uses: actions/checkout@v3

      - name: "🖼️ Setup scene..."
        run: |
          bash build-setup-ubuntu.sh

      - name: "🍱 Fetching built artifact..."
        uses: actions/download-artifact@v3
        with:
          name: linux-x86_64
          path: dist

      - name: "🛠️ Setup LinuxDeploy script"
        run: |
          wget -q "https://raw.githubusercontent.com/linuxdeploy/linuxdeploy-plugin-gtk/master/linuxdeploy-plugin-gtk.sh"
          wget -q "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
          chmod +x linuxdeploy-plugin-gtk.sh linuxdeploy-x86_64.AppImage

      - name: "📦 Package to AppImage"
        run: |
          mkdir -p Packaging
          mv dist/Parakeet-linux-x86_64 Packaging/AppRun
          mv dist/*/ Packaging/.
          cp -r AppDir/. Packaging/.
          chmod a+x Packaging/AppRun

          ./linuxdeploy-x86_64.AppImage \
            --appdir Packaging \
            --plugin gtk \
            --output appimage \
            -e Packaging/AppRun
          mv ./Parakeet_Desktop-*-x86_64.AppImage ./dist/

          cd dist
          zip -r9 "../Parakeet.AppImage.Linux.x64.zip" *

      - name: "🚀 Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: AppImage-x86_64
          path: dist/

      - name: 📝 Draft Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "<to be filled>"
          draft: true
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          files: |
            *.zip
