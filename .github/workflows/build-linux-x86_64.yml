name: Build (Linux x86_64)

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  schedule:
    # Build once every fortnight
    - cron: "10 4 1,15 * *"

permissions:
  contents: write

jobs:
  build:
    name: "Build Linux Binary"

    runs-on: ubuntu-22.04
    env:
      DEPLOY_GTK_VERSION: 3
      APPIMAGE_EXTRACT_AND_RUN: 1
      CMAKE_BUILD_PARALLEL_LEVEL: "3"
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg-bc
      CC: gcc-11
      CXX: g++-11

    steps:
      - name: "‚è≥ Clone repo..."
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "üñºÔ∏è Setup scene..."
        run: |
          mkdir -p .vcpkg-bc
          bash ./vcpkg/bootstrap-vcpkg.sh  --disableMetrics

          mkdir -p build
          bash scripts/build-setup-ubuntu.sh
          bash scripts/prepare.linux.sh
          bash scripts/build-prepare.sh

      - name: "üè≠ vcpkg: setup binary cache"
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-vcpkg-${{ matrix.win_ver }}-${{ hashFiles('**/vcpkg.json') }}
          path: |
            .vcpkg-bc
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ matrix.win_ver }}-
            ${{ runner.os }}-vcpkg-
            ${{ runner.os }}-

      - name: "üîß CMake: Configure"
        working-directory: build
        run: cmake --preset linux

      - name: "üõ†Ô∏è CMake: Build"
        run: cmake --build linux-rel

      - name: "üì¶ Packaging"
        shell: bash
        run: |
          cp build/linux/Release/parakeet_wx \
             dist/Parakeet-linux-x86_64

          ln -s dist Parakeet
          tar --dereference --numeric-owner --owner=0 --group=0 \
            -zcvf Parakeet.Linux.x64.tar.gz Parakeet

      - name: "üöÄ Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-x86_64
          path: dist/

      - name: "üõ†Ô∏è Setup LinuxDeploy script"
        run: |
          wget -q "https://raw.githubusercontent.com/linuxdeploy/linuxdeploy-plugin-gtk/master/linuxdeploy-plugin-gtk.sh"
          wget -q "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
          chmod +x linuxdeploy-plugin-gtk.sh linuxdeploy-x86_64.AppImage

      - name: "üì¶ Package to AppImage"
        run: |
          mkdir -p Packaging
          mv dist/Parakeet-linux-x86_64 Packaging/AppRun
          cp -r dist/*/ Packaging/.
          cp -r AppDir/. Packaging/.
          chmod a+x Packaging/AppRun

          ./linuxdeploy-x86_64.AppImage \
            --appdir Packaging \
            --plugin gtk \
            --output appimage \
            -e Packaging/AppRun
          mv ./Parakeet_Desktop-*-x86_64.AppImage ./dist/

          tar --dereference --numeric-owner --owner=0 --group=0 \
            -zcvf Parakeet.AppImage.Linux.x64.tar.gz Parakeet

      - name: "üöÄ Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: AppImage-x86_64
          path: dist/

      - name: üìù Draft Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "<to be filled>"
          draft: true
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          files: |
            *.tar.gz
