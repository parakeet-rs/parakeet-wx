cmake_minimum_required(VERSION 3.21)
project(parakeet_wx)

# Add our modules...
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake/")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/CPM-Loader.cmake")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/linker_hack.cmake")

# FIXME: make this target specific.
if(MSVC)
  # Using DPI aware manifest from wxWidgets
  set(CMAKE_EXE_LINKER_FLAGS    "${CMAKE_EXE_LINKER_FLAGS} /MANIFEST:NO")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /MANIFEST:NO")
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /MANIFEST:NO")

  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS")  
endif()

if(MSVC)
  # Force static link
  cmake_policy(SET CMP0091 NEW)
  set(MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

  add_compile_options(
    $<$<CONFIG:>:/MT> #---------|
    $<$<CONFIG:Debug>:/MTd> #---|-- Statically link the runtime libraries
    $<$<CONFIG:Release>:/MT> #--|
  )
else()
  add_compile_options($<$<CONFIG:RELEASE>:-s>)
  add_link_options($<$<CONFIG:RELEASE>:-s>)
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Release")
  add_compile_options(-DNDEBUG=1 -D_NDEBUG=1)
endif()

CPMAddPackage(
  NAME libparakeet
  GITHUB_REPOSITORY parakeet-rs/libparakeet
  GIT_TAG b5ae86b21ee13a4086ee9e4378e2afa93fd41189
  OPTIONS
    "PARAKEET_CRYPTO_BUILD_TESTING OFF"
)

# Bootstrap dependencies from vcpkg
set(Boost_NO_WARN_NEW_VERSIONS 1)
find_package(Boost COMPONENTS thread REQUIRED system chrono filesystem)
find_package(RapidJSON CONFIG REQUIRED)
find_package(wxWidgets COMPONENTS base aui core adv propgrid REQUIRED)
include(${wxWidgets_USE_FILE})

# Include our source files:
file(GLOB_RECURSE SOURCES src/*.cpp src/*.h)
add_executable(parakeet_wx
  ${SOURCES}
)
target_include_directories(parakeet_wx
  PRIVATE
    ${wxWidgets_INCLUDE_DIRS}
    ${BOOST_INCLUDE_DIRS}
    src
)
target_precompile_headers(parakeet_wx PRIVATE src/pch.h)
target_compile_features(parakeet_wx
  PRIVATE
    cxx_std_20
)
parakeet_linker_hack(parakeet_wxWidgets_LIBRARIES "${wxWidgets_LIBRARIES}")
target_link_libraries(parakeet_wx
  PRIVATE
    ${Boost_LIBRARIES}
    ${parakeet_wxWidgets_LIBRARIES}
    ParakeetCrypto::core
)

if (MSVC)
  add_definitions(-D_WIN32=1)
  if("${CMAKE_GENERATOR_PLATFORM}" STREQUAL "x64")
    add_definitions(-D_WIN64=1)
  endif()
  target_sources(parakeet_wx PRIVATE src/app.rc)
else()
  # Those are generated by form designer. Ingore.
  set_source_files_properties(
    src/ui/ui.cpp src/ui/ui.h
    PROPERTIES
      COMPILE_FLAGS "-w"
  )
endif()

# i18n text
file(GLOB MY_I18N_FILE
  "locale/*"
)
file(
  COPY ${MY_I18N_FILE} DESTINATION ./
  PATTERN "*.po" EXCLUDE
)
